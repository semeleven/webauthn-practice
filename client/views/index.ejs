<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>PetsGramm</title>
    <link href="/style.css" rel="stylesheet" />
  </head>
  <body>
    <div class="bg-white max-w-screen-lg mx-auto">
      <div class="px-4 border-b-2 border-gray-100">
        <div class="flex justify-between items-center py-6">
          <div class="lg:w-0 lg:flex-1">
            <a
              href="/"
              class="flex text-2xl"
              style="font-family: 'Comic Sans MS'"
            >
              PetsGramm
            </a>
          </div>
          <div class="flex items-center justify-end space-x-8">
            <% if (user) { %>
            <button type="button" class="btn btn-secondary js-qrsignin">
              QR sign in
            </button>
            <a
              href="/profile"
              class="whitespace-no-wrap text-base leading-6 font-medium text-gray-500 hover:text-gray-900 focus:outline-none focus:text-gray-900"
            >
              <%= user.name %>
            </a>
            <% } else { %>

            <a href="/signin-qr" class="btn btn-secondary">
              <svg
                class="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z"
                ></path>
              </svg>
            </a>

            <button type="button" class="btn btn-secondary js-signin">
              Sign in
            </button>
            <button type="button" class="btn btn-primary js-signup">
              Sign up
            </button>
            <% } %>
          </div>
        </div>
      </div>
      <div class="px-4 py-6 border-b-2 border-gray-100">
        <div class="flex items-center">
          <img
            class="h-20 w-20 md:w-40 md:h-40 rounded-full mr-10 object-cover"
            src="/images/avatar.webp"
            lazy
            alt="avatar"
          />
          <div>
            <h2 class="text-2xl pb-2">Tiffani</h2>
            <div class="text-gray-600">Moscow</div>
            <div class="text-gray-600">Pomeranian</div>
          </div>
        </div>
      </div>
      <div class="p-4 grid grid-cols-3 gap-4">
        <div class="card">
          <img lazy src="/images/1.webp" alt="" />
        </div>
        <div class="card">
          <img lazy src="/images/2.webp" alt="" />
        </div>
        <div class="card">
          <img lazy src="/images/3.webp" alt="" />
        </div>
        <div class="card">
          <img lazy src="/images/4.webp" alt="" />
        </div>
        <div class="card">
          <img lazy src="/images/5.webp" alt="" />
        </div>
        <div class="card">
          <img lazy src="/images/6.webp" alt="" />
        </div>
        <div class="card">
          <img lazy src="/images/7.webp" alt="" />
        </div>
        <div class="card">
          <img lazy src="/images/8.webp" alt="" />
        </div>
        <div class="card">
          <img lazy src="/images/9.webp" alt="" />
        </div>
        <div class="card">
          <img lazy src="/images/10.webp" alt="" />
        </div>
        <div class="card">
          <img lazy src="/images/11.webp" alt="" />
        </div>
        <div class="card">
          <img lazy src="/images/12.webp" alt="" />
        </div>
      </div>
    </div>
    <video
      style="
        top: 50%;
        bottom: 0;
        left: 50%;
        position: fixed;
        display: block;
        transform: translate(-50%, -50%);
        max-width: 100%;
        max-height: 100vh;
      "
      class="hidden"
      id="video"
    ></video>
  </body>

  <!-- Signup -->
  <script type="module">
    import { xios } from "/api.js";
    import {
      convertCreateCredential,
      convertCreateOptions,
    } from "/webauthn-helpers.js";

    document
      .querySelector(".js-signup")
      ?.addEventListener("click", async (e) => {
        const { options } = await xios("/signup/challenge");

        let credential;
        try {
          credential = await navigator.credentials.create({
            publicKey: convertCreateOptions(options),
          });
        } catch (e) {
          alert("navigator.credentials.create error: " + e.message);
          return;
        }

        const { success, error } = await xios("/signup", {
          options: convertCreateCredential(credential),
          nick: new Date().toString(),
        });

        if (success) {
          location.href = "/";
        } else {
          alert(error || "Something wrong");
        }
      });
  </script>

  <!-- Signin -->
  <script type="module">
    import { xios } from "/api.js";
    import {
      convertGetOptions,
      convertGetCredential,
    } from "./webauthn-helpers.js";

    document
      .querySelector(".js-signin")
      ?.addEventListener("click", async (e) => {
        const { options } = await xios("/signin/challenge");

        let credential;

        try {
          credential = await navigator.credentials.get({
            publicKey: convertGetOptions(options),
          });
        } catch (e) {
          alert("navigator.credentials.get error: " + e.message);
          return;
        }

        const { success, error } = await xios(
          "/signin",
          convertGetCredential(credential)
        );

        if (success) {
          location.href = "/";
        } else {
          alert(error || "Not valid token");
        }
      });
  </script>

  <!-- QR code  -->
  <script type="module">
    import { xios } from "/api.js";
    import { enableQrScanner } from "/qrcode.js";
    const video = document.querySelector("#video");
    const button = document.querySelector(".js-qrsignin");

    button?.addEventListener("click", async () => {
      video.classList.remove("hidden");
      const { text } = await enableQrScanner(video);

      // Some checks here
      // Are you want?

      const { success } = await xios("/qrcode-signin", { code: text });
      if (success) {
        video.classList.add("hidden");
        alert("DONE!");
      }
    });
  </script>
</html>
